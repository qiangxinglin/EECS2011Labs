{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fnil\fcharset0 Consolas-Bold;\f1\fnil\fcharset0 Consolas;\f2\fnil\fcharset0 Consolas-BoldItalic;
\f3\fnil\fcharset0 Consolas-Italic;}
{\colortbl;\red255\green255\blue255;\red156\green156\blue156;\red10\green82\blue135;\red43\green139\blue39;
\red15\green112\blue1;\red18\green139\blue2;\red83\green83\blue83;\red11\green85\blue38;\red190\green74\blue193;
\red0\green0\blue83;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f0\b\fs24 \cf2 {\listtext	1	}\expnd0\expndtw0\kerning0
package
\f1\b0  \cf3 A3Q1\cf4 ;\cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f2\i\b \cf5 \kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
/**
\f1\i0\b0 \cf2 \
\ls1\ilvl0
\f2\i\b \cf5 \kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
\'a0* Extends the TreeMap class to allow convenient access to entries
\f1\i0\b0 \cf2 \
\ls1\ilvl0
\f2\i\b \cf5 \kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
\'a0* within a specified range of key values (findAllInRange).
\f1\i0\b0 \cf2 \
\ls1\ilvl0
\f2\i\b \cf5 \kerning1\expnd0\expndtw0 {\listtext	6	}\expnd0\expndtw0\kerning0
\'a0* @author jameselder
\f1\i0\b0 \cf2 \
\ls1\ilvl0
\f2\i\b \cf5 \kerning1\expnd0\expndtw0 {\listtext	7	}\expnd0\expndtw0\kerning0
\'a0*/
\f1\i0\b0 \cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f0\b \cf2 \kerning1\expnd0\expndtw0 {\listtext	8	}\expnd0\expndtw0\kerning0
public
\f1\b0  
\f0\b class
\f1\b0  BSTRange\cf4 <\cf2 K,V\cf4 >\cf2  
\f0\b extends
\f1\b0  TreeMap\cf4 <\cf2 K,V\cf4 >\cf6 \{\cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	9	}\expnd0\expndtw0\kerning0
\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	10	}\expnd0\expndtw0\kerning0
\'a0 \'a0 
\f3\i \cf7 /* Returns the lowest (deepest) position in the subtree rooted at pos
\f1\i0 \cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f3\i \cf7 \kerning1\expnd0\expndtw0 {\listtext	11	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0* that is a common ancestor to positions with
\f1\i0 \cf2 \
\ls1\ilvl0
\f3\i \cf7 \kerning1\expnd0\expndtw0 {\listtext	12	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0* keys k1 and k2, or to the positions they would occupy were they present.
\f1\i0 \cf2 \
\ls1\ilvl0
\f3\i \cf7 \kerning1\expnd0\expndtw0 {\listtext	13	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0*/
\f1\i0 \cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	14	}\expnd0\expndtw0\kerning0
\'a0 \'a0 
\f0\b protected
\f1\b0  Position\cf4 <\cf2 Entry\cf4 <\cf2 K, V\cf4 >>\cf2  findLowestCommonAncestor\cf6 (\cf2 K k1, K k2,\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	15	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Position\cf4 <\cf2 Entry\cf4 <\cf2 K, V\cf4 >>\cf2  pos\cf6 )\cf2  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	16	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 
\f0\b if
\f1\b0  \cf6 (\cf2 isExternal\cf6 (\cf2 pos\cf6 ))\cf2  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	17	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 
\f0\b return
\f1\b0  pos\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	18	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \cf6 \}\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	19	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 
\f0\b if
\f1\b0  \cf6 (\cf2 compare\cf6 (\cf2 k1, pos.\cf8 getElement\cf6 ())\cf2  \cf4 >\cf2  \cf9 0\cf6 )\cf2  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	20	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 pos \cf4 =\cf2  findLowestCommonAncestor\cf6 (\cf2 k1, k2, right\cf6 (\cf2 pos\cf6 ))\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	21	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \cf6 \}\cf2  
\f0\b else
\f1\b0  
\f0\b if
\f1\b0  \cf6 (\cf2 compare\cf6 (\cf2 k2, pos.\cf8 getElement\cf6 ())\cf2  \cf4 <\cf2  \cf9 0\cf6 )\cf2  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	22	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 pos \cf4 =\cf2  findLowestCommonAncestor\cf6 (\cf2 k1, k2, left\cf6 (\cf2 pos\cf6 ))\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	23	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \cf6 \}\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	24	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 
\f0\b return
\f1\b0  pos\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	25	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \cf6 \}\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	26	}\expnd0\expndtw0\kerning0
\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	27	}\expnd0\expndtw0\kerning0
\'a0 \'a0 
\f3\i \cf7 /* Finds all entries in the subtree rooted at pos \'a0with keys of k or greater
\f1\i0 \cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f3\i \cf7 \kerning1\expnd0\expndtw0 {\listtext	28	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0* and copies them to L, in non-decreasing order.
\f1\i0 \cf2 \
\ls1\ilvl0
\f3\i \cf7 \kerning1\expnd0\expndtw0 {\listtext	29	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0*/
\f1\i0 \cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	30	}\expnd0\expndtw0\kerning0
\'a0 \'a0 
\f0\b protected
\f1\b0  
\f0\b \cf10 void
\f1\b0 \cf2  findAllAbove\cf6 (\cf2 K k, Position\cf4 <\cf2 Entry\cf4 <\cf2 K, V\cf4 >>\cf2  pos,\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	31	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 PositionalList\cf4 <\cf2 Entry\cf4 <\cf2 K, V\cf4 >>\cf2  L\cf6 )\cf2  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	32	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 
\f0\b if
\f1\b0  \cf6 (\cf2 isExternal\cf6 (\cf2 pos\cf6 ))\cf2  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	33	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 
\f0\b return
\f1\b0 \cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	34	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \cf6 \}\cf2  
\f0\b else
\f1\b0  
\f0\b if
\f1\b0  \cf6 (\cf2 compare\cf6 (\cf2 k, pos.\cf8 getElement\cf6 ())\cf2  \cf4 <=\cf2  \cf9 0\cf6 )\cf2  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	35	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 findAllAbove\cf6 (\cf2 k, left\cf6 (\cf2 pos\cf6 )\cf2 , L\cf6 )\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	36	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 L.\cf8 addLast\cf6 (\cf2 pos.\cf8 getElement\cf6 ())\cf4 ;\cf2  \'a0 \'a0 \'a0 \'a0
\f3\i \cf7 // add entry
\f1\i0 \cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	37	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 findAllAbove\cf6 (\cf2 k, right\cf6 (\cf2 pos\cf6 )\cf2 , L\cf6 )\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	38	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \cf6 \}\cf2  
\f0\b else
\f1\b0  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	39	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 findAllAbove\cf6 (\cf2 k, right\cf6 (\cf2 pos\cf6 )\cf2 , L\cf6 )\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	40	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \cf6 \}\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	41	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \cf6 \}\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	42	}\expnd0\expndtw0\kerning0
\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	43	}\expnd0\expndtw0\kerning0
\'a0 \'a0 
\f3\i \cf7 /* Finds all entries in the subtree rooted at pos with keys of k or less
\f1\i0 \cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f3\i \cf7 \kerning1\expnd0\expndtw0 {\listtext	44	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0* and copies them to L, in non-decreasing order.
\f1\i0 \cf2 \
\ls1\ilvl0
\f3\i \cf7 \kerning1\expnd0\expndtw0 {\listtext	45	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0*/
\f1\i0 \cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	46	}\expnd0\expndtw0\kerning0
\'a0 \'a0 
\f0\b protected
\f1\b0  
\f0\b \cf10 void
\f1\b0 \cf2  findAllBelow\cf6 (\cf2 K k, Position\cf4 <\cf2 Entry\cf4 <\cf2 K, V\cf4 >>\cf2  pos,\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	47	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 PositionalList\cf4 <\cf2 Entry\cf4 <\cf2 K, V\cf4 >>\cf2  L\cf6 )\cf2  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	48	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 
\f0\b if
\f1\b0  \cf6 (\cf2 isExternal\cf6 (\cf2 pos\cf6 ))\cf2  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	49	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 
\f0\b return
\f1\b0 \cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	50	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \cf6 \}\cf2  
\f0\b else
\f1\b0  
\f0\b if
\f1\b0  \cf6 (\cf2 compare\cf6 (\cf2 k, pos.\cf8 getElement\cf6 ())\cf2  \cf4 >=\cf2  \cf9 0\cf6 )\cf2  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	51	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 findAllBelow\cf6 (\cf2 k, left\cf6 (\cf2 pos\cf6 )\cf2 , L\cf6 )\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	52	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 L.\cf8 addLast\cf6 (\cf2 pos.\cf8 getElement\cf6 ())\cf4 ;\cf2  \'a0 \'a0 \'a0 \'a0
\f3\i \cf7 // add entry
\f1\i0 \cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	53	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 findAllBelow\cf6 (\cf2 k, right\cf6 (\cf2 pos\cf6 )\cf2 , L\cf6 )\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	54	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \cf6 \}\cf2  
\f0\b else
\f1\b0  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	55	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 findAllBelow\cf6 (\cf2 k, left\cf6 (\cf2 pos\cf6 )\cf2 , L\cf6 )\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	56	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \cf6 \}\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	57	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \cf6 \}\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	58	}\expnd0\expndtw0\kerning0
\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	59	}\expnd0\expndtw0\kerning0
\'a0 \'a0 
\f3\i \cf7 /* Returns all entries with keys no less than k1 and no greater than k2,
\f1\i0 \cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f3\i \cf7 \kerning1\expnd0\expndtw0 {\listtext	60	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0* in non-decreasing order.
\f1\i0 \cf2 \
\ls1\ilvl0
\f3\i \cf7 \kerning1\expnd0\expndtw0 {\listtext	61	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0*/
\f1\i0 \cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	62	}\expnd0\expndtw0\kerning0
\'a0 \'a0 
\f0\b public
\f1\b0  PositionalList\cf4 <\cf2 Entry\cf4 <\cf2 K, V\cf4 >>\cf2  findAllInRange\cf6 (\cf2 K k1, K k2\cf6 )\cf2  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	63	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 checkKey\cf6 (\cf2 k1\cf6 )\cf4 ;\cf2  \'a0 \'a0 \'a0 \'a0 \'a0 
\f3\i \cf7 // may throw an InvalidKeyException
\f1\i0 \cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	64	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 checkKey\cf6 (\cf2 k2\cf6 )\cf4 ;\cf2  \'a0 \'a0 \'a0 \'a0 \'a0 
\f3\i \cf7 // may throw an InvalidKeyException
\f1\i0 \cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	65	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 Position\cf4 <\cf2 Entry\cf4 <\cf2 K, V\cf4 >>\cf2  pos \cf4 =\cf2  root\cf6 ()\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	66	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 PositionalList\cf4 <\cf2 Entry\cf4 <\cf2 K, V\cf4 >>\cf2  L \cf4 =\cf2  
\f0\b new
\f1\b0  LinkedPositionalList\cf4 <\cf2 Entry\cf4 <\cf2 K, V\cf4 >>\cf6 ()\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	67	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 pos \cf4 =\cf2  findLowestCommonAncestor\cf6 (\cf2 k1, k2, pos\cf6 )\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	68	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 
\f0\b if
\f1\b0  \cf6 (\cf2 isExternal\cf6 (\cf2 pos\cf6 ))\cf2  \cf6 \{\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	69	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 
\f0\b return
\f1\b0  L\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	70	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 \cf6 \}\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	71	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 findAllAbove\cf6 (\cf2 k1, left\cf6 (\cf2 pos\cf6 )\cf2 , L\cf6 )\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	72	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 L.\cf8 addLast\cf6 (\cf2 pos.\cf8 getElement\cf6 ())\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	73	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 findAllBelow\cf6 (\cf2 k2, right\cf6 (\cf2 pos\cf6 )\cf2 , L\cf6 )\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	74	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \'a0 \'a0 
\f0\b return
\f1\b0  L\cf4 ;\cf2 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	75	}\expnd0\expndtw0\kerning0
\'a0 \'a0 \cf6 \}\cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf6 \kerning1\expnd0\expndtw0 {\listtext	76	}\expnd0\expndtw0\kerning0
\}}